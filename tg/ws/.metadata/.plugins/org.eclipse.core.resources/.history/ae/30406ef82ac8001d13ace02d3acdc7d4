package uo.mp.tg1.payments.model;

import java.time.LocalDate;

import uo.mp.tg1.ruralvia.interfacerepositiory.Transaction;
import uo.mp.util.check.ArgumentChecks;

public class CreditCar extends Payments implements Transaction{
	public static final String MERCHANT_ID="1111-22";
	
	private String creditNumber;
	private int month;
	private int year;
	
	
	public CreditCar(String id,int amount,String creditNumber,int month,int year) {
		setId(id);
		setAmount(amount);
		setValid(INVALID);
		
		setCreditCarNumber(creditNumber);
		setMonth(month);
		setYear(year);
	}
	
	
	
	/**
	 * Devuleve el valor de la tarjeta
	 * @return creditNumber de tipo int
	 */
	public String getCreditNumber() {
		return creditNumber;
	}
	
	/**
	 * Devuelve el valor de caducidad, el mes
	 * @return month de caducidad
	 */
	public int getMonth() {
		return month;
	}
	
	/**
	 * Devuelve el valor de caducidad, el a単o
	 * @return year de caducidad
	 */
	public int getYear() {
		return year;
	}

	/**
	 * Establece el  numero de la tarjeta
	 * @param creditNumber de tipo int
	 */
	private void setCreditNumber(String creditNumber) {
		this.creditNumber = creditNumber;
	}

	/**
	 * Establece el a単o de caducidad
	 * @param month de caducidad
	 */
	private void setMonth(int month) {
		ArgumentChecks.isTrue(month>0 && month<=12, "Numero de tarjeta invalido");
		this.month = month;
	}

	/**
	 * Establece el a単o de caducidad
	 * @param year de caducidad
	 */
	private void setYear(int year) {
		LocalDate date = LocalDate.now();
		int actualYear= date.getYear();
		ArgumentChecks.isTrue(year>=actualYear && year<actualYear+10,"a単o invalido");
		this.year = year;
	}

	@Override
	public void valid() {
		if(this instanceof Transaction) {
			
		}
		
	}
	
	
	
	
	
	
}
