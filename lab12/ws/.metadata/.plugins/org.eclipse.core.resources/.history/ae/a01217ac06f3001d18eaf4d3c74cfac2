package uo.mp;

import java.io.FileNotFoundException;
import java.util.List;

import uo.mp.transaction.TransactionProcessor;
import uo.mp.transaction.model.Transaction;
import uo.mp.transaction.model.exception.RepeatedTransactionException;
import uo.mp.util.log.Logger;

public class Main {

//	private static final String TRX_FILE_NAME = "input_transactions.trx";
//	private static final String TRX_FILE_NAME = "input_transactions_with_parsing_errors.trx";
	private static final String TRX_FILE_NAME = "input_transactions_with_repeated_abort.trx";

	public static void main(String[] args) {
		new Main().run();
	}

	private void run() {
		try {
			process();
		} catch (FileNotFoundException | RepeatedTransactionException e) {
			Logger.log(e);
			showError(e.getMessage());
		} catch(Exception e) {
			Logger.log(e);
			showFatalError(e.getMessage());
		}
		// exception handling
	}

	private void process() throws FileNotFoundException, RepeatedTransactionException {
		TransactionProcessor tp = new TransactionProcessor();
		tp.process( TRX_FILE_NAME );
		showInvalidTransactions( tp.getInvalidTransactions() );
	}

	private void showInvalidTransactions(List<Transaction> invalidTrxs) {
		for(Transaction t: invalidTrxs ) {
			System.out.println( t );
			for(String error: t.getFaults() ) {
				System.out.println( error );
			}
		}
	}
	
	private void showError(String message) {
		print("APPLICATION ERROR revisa este error: "+message);
	}
	
	private void showFatalError(String message) {
		print("Programing Error, la aplicacion finaliza debido a un error interno");
	}
	
	private void print(String message) {
		System.out.println(message);
	}

}
